@model HomeModel

<style>
    .inputDetails {
        padding-top: 20px;
    }
    
    .songName {
        padding: 5px 20px 5px 10px;
        margin: 0;
    }

    table.playlist {
        width: 600px;
    }

    th, td {
        valign: middle;
        width: 50%;
    }

    .formSpacer {
        padding-left: 20px;
    }

    .songCount {
        text-align: center;
    }
    
</style>

<div class="inputDetails">
@{
    using (Html.BeginForm("Post", "Home", FormMethod.Post))
    {
        <label>
            Artist Name: 
            @Html.TextBoxFor(m => m.ArtistName)
        </label>
        <span class="formSpacer"></span>
        <label>
            Maximum concerts to include: 
            @Html.TextBoxFor(m => m.ConcertCount)
        </label>
        <span class="formSpacer"></span>
        <button type="submit" class="btn btn-success">Go</button>
    }

    if (Model.ArtistFound.HasValue && Model.ArtistFound.Value == false) {
        <p>
            No artist found with that name!
        </p>
    }
}
</div>
@if (Model.SongsFound.HasValue && Model.SongsFound.Value == false) {
    <p>
        No songs found!
    </p>
}
@if (Model.SongsFound.HasValue && Model.SongsFound.Value == true) {
    <br />
    <hr />  
    <div class="outputDetails">
        <p>
            Here's a playlist of songs @Model.ArtistName might play, based on the last @Model.ActualCount concerts 
            @(Model.ActualCount < Model.ConcertCount ? "(that's all there is!)" : ""):
        </p>
    
        @using (Html.BeginForm("Spotify", "Home", FormMethod.Post))
        {
            <button type="submit" class="btn btn-success">Create Spotify Playlist</button>
        }
    
        <br />

        <table class="playlist table-striped">
            <tr>
                <th class="songName">Song Name</th>
                <th class="songCount">Times Played</th>
            </tr>
            
            @foreach (var song in Model.Songs) {
            
            <tr>
                <td class="songName">@song.Name</td>
                <td class="songCount">@(song.DuplicateCount + 1) / @Model.ActualCount</td>
            </tr>
            
            }
        </table>
    </div>
}